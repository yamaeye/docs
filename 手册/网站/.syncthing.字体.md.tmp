### [Google Fonts国内加速服务](https://u.sb/css-cdn/)

`fonts.googleapis.com` 替换为 `fonts.loli.net` 

`fonts.gstatic.com` 替换成 `gstatic.loli.net` 

`themes.googleusercontent.com` 替换成 `themes.loli.net` 

### [字蛛](https://github.com/aui/font-spider/blob/master/README-ZH-CN.md)

字蛛是一个智能 WebFont 压缩工具，它能自动分析出页面使用的 WebFont 并进行按需压缩。

#### 1. 安装

```
npm install font-spider -g
```

#### 2. 书写 CSS

```css
/*声明 WebFont*/
@font-face {
font-family: 'source';
src: url('../font/source.eot');
src:
url('../font/source.eot?#font-spider') format('embedded-opentype'),
url('../font/source.woff2') format('woff2'),
url('../font/source.woff') format('woff'),
url('../font/source.ttf') format('truetype'),
url('../font/source.svg') format('svg');
font-weight: normal;
font-style: normal;
}
/*使用指定字体*/
.home h1, .demo > .test {
font-family: 'source';
}
```

>`@font-face` 中的 `src` 定义的 `.ttf` 文件必须存在，其余的格式将由工具自动生成。

#### 3. 压缩 WebFont

```
font-spider [options] <htmlFile1 htmlFile2 ...>
```

使用通配符压缩多个 HTML 文件关联的 WebFont，例如：

```
font-spider public/*.html
```